/** * Meta class for 'tuple2' property <br/> * The meta class exposes some useful methods: <ul> *    <li>encodeFromJava: encode a property from raw Java to CQL java compatible type </li> *    <li>encodeField: extract the current property value from the given info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs instance and encode to CQL java compatible type </li> *    <li>decodeFromGettable: decode from a {@link com.datastax.driver.core.GettableData} instance (Row, UDTValue, TupleValue) the current property</li> * </ul> */@java.lang.SuppressWarnings({"serial", "unchecked"})public static final info.archinnov.achilles.internals.metamodel.Tuple2Property<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, com.datastax.driver.core.ConsistencyLevel, java.lang.Integer> tuple2 = new info.archinnov.achilles.internals.metamodel.Tuple2Property<>(new info.archinnov.achilles.internals.metamodel.columns.FieldInfo<>((info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs entity$) -> entity$.getTuple2(), (info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs entity$, info.archinnov.achilles.type.tuples.Tuple2<com.datastax.driver.core.ConsistencyLevel, java.lang.Integer> value$) -> entity$.setTuple2(value$), "tuple2", "my_tuple_2", info.archinnov.achilles.internals.metamodel.columns.ColumnType.NORMAL, new info.archinnov.achilles.internals.metamodel.columns.ColumnInfo(false), info.archinnov.achilles.internals.metamodel.index.IndexInfo.noIndex()), new info.archinnov.achilles.internals.metamodel.SimpleProperty<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, com.datastax.driver.core.ConsistencyLevel, java.lang.String>(info.archinnov.achilles.internals.metamodel.columns.FieldInfo.<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, com.datastax.driver.core.ConsistencyLevel> of("tuple2", "my_tuple_2", true), com.datastax.driver.core.DataType.text(), gettable$ -> null, (udt$, value$) -> {}, new com.google.common.reflect.TypeToken<com.datastax.driver.core.ConsistencyLevel>(){}, new com.google.common.reflect.TypeToken<java.lang.String>(){}, new info.archinnov.achilles.internals.codec.JSONCodec<>(com.datastax.driver.core.ConsistencyLevel.class, com.fasterxml.jackson.databind.type.SimpleType.construct(com.datastax.driver.core.ConsistencyLevel.class))), new info.archinnov.achilles.internals.metamodel.SimpleProperty<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, java.lang.Integer, java.lang.String>(info.archinnov.achilles.internals.metamodel.columns.FieldInfo.<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, java.lang.Integer> of("tuple2", "my_tuple_2", true), com.datastax.driver.core.DataType.text(), gettable$ -> null, (udt$, value$) -> {}, new com.google.common.reflect.TypeToken<java.lang.Integer>(){}, new com.google.common.reflect.TypeToken<java.lang.String>(){}, new info.archinnov.achilles.internals.sample_classes.codecs.IntToStringCodec()));