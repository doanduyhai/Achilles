/** * Meta class for 'okSet' property <br/> * The meta class exposes some useful methods: <ul> *    <li>encodeFromJava: encode a property from raw Java to CQL java compatible type </li> *    <li>encodeField: extract the current property value from the given info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs instance and encode to CQL java compatible type </li> *    <li>decodeFromGettable: decode from a {@link com.datastax.driver.core.GettableData} instance (Row, UDTValue, TupleValue) the current property</li> * </ul> */@java.lang.SuppressWarnings({"serial", "unchecked"})public static final info.archinnov.achilles.internals.metamodel.SetProperty<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, com.datastax.driver.core.ConsistencyLevel, java.lang.Integer> okSet = new info.archinnov.achilles.internals.metamodel.SetProperty<>(new info.archinnov.achilles.internals.metamodel.columns.FieldInfo<>((info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs entity$) -> entity$.getOkSet(), (info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs entity$, java.util.Set<com.datastax.driver.core.ConsistencyLevel> value$) -> entity$.setOkSet(value$), "okSet", "ok_set", info.archinnov.achilles.internals.metamodel.columns.ColumnType.NORMAL, new info.archinnov.achilles.internals.metamodel.columns.ColumnInfo(false), info.archinnov.achilles.internals.metamodel.index.IndexInfo.noIndex()), false, false, java.lang.Integer.class, new info.archinnov.achilles.internals.metamodel.SimpleProperty<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, com.datastax.driver.core.ConsistencyLevel, java.lang.Integer>(info.archinnov.achilles.internals.metamodel.columns.FieldInfo.<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, com.datastax.driver.core.ConsistencyLevel> of("okSet", "ok_set", true), com.datastax.driver.core.DataType.cint(), gettable$ -> null, (udt$, value$) -> {}, new com.google.common.reflect.TypeToken<com.datastax.driver.core.ConsistencyLevel>(){}, new com.google.common.reflect.TypeToken<java.lang.Integer>(){}, new info.archinnov.achilles.internals.codec.EnumOrdinalCodec<>(java.util.Arrays.asList(com.datastax.driver.core.ConsistencyLevel.values()), com.datastax.driver.core.ConsistencyLevel.class)));