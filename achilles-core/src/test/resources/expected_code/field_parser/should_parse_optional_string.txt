/** * Meta class for 'optionalString' property <br/> * The meta class exposes some useful methods: <ul> *    <li>encodeFromJava: encode a property from raw Java to CQL java compatible type </li> *    <li>encodeField: extract the current property value from the given info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs instance and encode to CQL java compatible type </li> *    <li>decodeFromGettable: decode from a {@link com.datastax.driver.core.GettableData} instance (Row, UDTValue, TupleValue) the current property</li> * </ul> */@java.lang.SuppressWarnings({"serial", "unchecked"})public static final info.archinnov.achilles.internals.metamodel.JdkOptionalProperty<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, java.lang.String, java.lang.String> optionalString = new info.archinnov.achilles.internals.metamodel.JdkOptionalProperty<>(new info.archinnov.achilles.internals.metamodel.columns.FieldInfo<>((info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs entity$) -> entity$.getOptionalString(), (info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs entity$, java.util.Optional<java.lang.String> value$) -> entity$.setOptionalString(value$), "optionalString", "optional_string", info.archinnov.achilles.internals.metamodel.columns.ColumnType.NORMAL, new info.archinnov.achilles.internals.metamodel.columns.ColumnInfo(false), info.archinnov.achilles.internals.metamodel.index.IndexInfo.noIndex()), new info.archinnov.achilles.internals.metamodel.SimpleProperty<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, java.lang.String, java.lang.String>(info.archinnov.achilles.internals.metamodel.columns.FieldInfo.<info.archinnov.achilles.internals.sample_classes.parser.field.TestEntityForCodecs, java.lang.String> of("optional_string", "optionalString", false), com.datastax.driver.core.DataType.text(), gettableData$ -> gettableData$.get("optional_string", java.lang.String.class), (settableData$, value$) -> settableData$.set("optional_string", value$, java.lang.String.class), new com.google.common.reflect.TypeToken<java.lang.String>(){}, new com.google.common.reflect.TypeToken<java.lang.String>(){}, new info.archinnov.achilles.internals.codec.FallThroughCodec<>(java.lang.String.class)));